// Copyright 2021 Tencent Inc. All rights reserved.
//
// 支付分授权对外API
//
// 支付分授权领域对外API
//
// API version: 1.4.0

// Code generated by WechatPay APIv3 Generator based on [OpenAPI
// Generator](https://openapi-generator.tech); DO NOT EDIT.

package com.wechat.pay.java.service.payscore.permission.model;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import com.wechat.pay.java.core.util.GsonUtil;

/** UpgradeUserPermissionsRequest */
public class UpgradeUserPermissionsRequest {
  /** 服务ID 说明：该服务ID有本接口对应产品的权限 */
  @SerializedName("service_id")
  private String serviceId;
  /** 公众号ID 说明：微信公众平台分配的与传入的商户号建立了支付绑定关系的AppID，可在公众平台查看绑定关系，此参数需在本系统先进行配置 */
  @SerializedName("appid")
  private String appid;
  /** 用户标识 说明：AppID下的用户标识 */
  @SerializedName("openid")
  @Expose(serialize = false)
  private String openid;
  /** 授权协议号 说明：要求此参数只能由数字、大小写字母_-|*组成, 且在同一个商户号下唯一. 注意: 授权协议号在同一商户号下唯一是不受接口限制的 */
  @SerializedName("authorization_code")
  private String authorizationCode;
  /** 用户当前授权渠道 说明：用户当前授权渠道 */
  @SerializedName("apply_permissions_channel")
  private ApplyPermissionsChannel applyPermissionsChannel;

  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }

  public String getAppid() {
    return appid;
  }

  public void setAppid(String appid) {
    this.appid = appid;
  }

  public String getOpenid() {
    return openid;
  }

  public void setOpenid(String openid) {
    this.openid = openid;
  }

  public String getAuthorizationCode() {
    return authorizationCode;
  }

  public void setAuthorizationCode(String authorizationCode) {
    this.authorizationCode = authorizationCode;
  }

  public ApplyPermissionsChannel getApplyPermissionsChannel() {
    return applyPermissionsChannel;
  }

  public void setApplyPermissionsChannel(ApplyPermissionsChannel applyPermissionsChannel) {
    this.applyPermissionsChannel = applyPermissionsChannel;
  }

  @Override
  public String toString() {
    return GsonUtil.getGson().toJson(this);
  }
}
