import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins{
    id "common"
}

ext {
    publishedArtifactId = rootProject.name
}

sourceSets {
    example {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    exampleImplementation.extendsFrom implementation
    exampleRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation project(":core")
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    testImplementation "junit:junit:${junitVersion}"
    testImplementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
}

jar {
    manifest {
        attributes("Automatic-Module-Name": "com.wechat.pay.java")
        attributes("Implementation-Version": project.version)
    }
}


task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

publishing {
    java {
        withJavadocJar()
        withSourcesJar()
    }

    publications {
        maven(MavenPublication) {
            artifactId = project.ext.publishedArtifactId
            from components.java

            pom {
                name = project.ext.publishedArtifactId
                description = "A Java Service SDK for WeChat Pay APIv3"
                url = ""
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        name = "WeChat Pay APIv3 Team"
                    }
                }
                scm {
                    connection = ""
                    developerConnection = ""
                    url = ""
                }
            }
        }
    }

    repositories {
        maven {
            name = "mavencentral"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("SONATYPE_NEXUS_USERNAME")
                password System.getenv("SONATYPE_NEXUS_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}