plugins{
    id "common"
}

ext {
    publishedArtifactId = "wechatpay-java-shangmi-kona"
    tencentsm_ssl = "0.8.3"
    tencentsm_crypto = "1.11.4"
}

repositories {
    mavenCentral()
    maven {
        url "https://mirrors.tencent.com/repository/maven/tencent_public"
    }
}

dependencies {
    implementation project(":core")
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "com.tencent:tencentsm-ssl:${tencentsm_ssl}"
    implementation "com.tencent:tencentsm-crypto:${tencentsm_crypto}"

    testImplementation platform("org.junit:junit-bom:${junit5Version}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes("Automatic-Module-Name": "com.wechat.pay.java")
        attributes("Implementation-Version": project.version)
    }
}

publishing {
    java {
        withJavadocJar()
        withSourcesJar()
    }

    publications {
        maven(MavenPublication) {
            artifactId = project.ext.publishedArtifactId
            from components.java

            pom {
                name = project.ext.publishedArtifactId
                description = "A Shangmi extension for WeChatPay-Java"
                url = ""
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        name = "WeChat Pay APIv3 Team"
                    }
                }
                scm {
                    connection = ""
                    developerConnection = ""
                    url = ""
                }
            }
        }
    }

    repositories {
        maven {
            name = "mavencentral"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv("SONATYPE_NEXUS_USERNAME")
                password System.getenv("SONATYPE_NEXUS_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}