// Copyright 2021 Tencent Inc. All rights reserved.
//
// 微信支付营销系统开放API
//
// 新增立减金api
//
// API version: 3.4.0

// Code generated by WechatPay APIv3 Generator based on [OpenAPI
// Generator](https://openapi-generator.tech); DO NOT EDIT.

package com.wechat.pay.java.service.cashcoupons.model;

import static com.wechat.pay.java.core.util.StringUtil.toIndentedString;

import com.google.gson.annotations.SerializedName;
import java.util.List;

/** CreateNocashStockRequest */
public class CreateNocashStockRequest {
  /** 批次名称 说明：批次名称 */
  @SerializedName("stock_name")
  private String stockName;
  /** 可核销商户 说明：可核销商户 */
  @SerializedName("available_merchants")
  private List<String> availableMerchants;
  /** 批次开始时间 说明：批次开始时间 */
  @SerializedName("available_begin_time")
  private String availableBeginTime;
  /** 批次结束时间 说明：批次结束时间 */
  @SerializedName("available_end_time")
  private String availableEndTime;
  /** 是否开启自然人限制 说明：true-是；false-否，默认否 */
  @SerializedName("natural_person_limit")
  private Boolean naturalPersonLimit;
  /** api发券防刷 说明：true-是；false-否，默认否 */
  @SerializedName("prevent_api_abuse")
  private Boolean preventApiAbuse;
  /** 优惠生效时间 说明：优惠生效时间（包括立减、券） */
  @SerializedName("favor_available_time")
  private FavorAvailableTime favorAvailableTime;
  /** 代金券说明 说明：代金券说明 */
  @SerializedName("description")
  private String description;
  /** 普通发券批次使用规则 说明：批次使用规则 */
  @SerializedName("stock_use_rule")
  private StockUseRule stockUseRule;
  /** 批次类型 说明：NORMAL-代金券批次；DISCOUNT_CUT-立减与折扣； */
  @SerializedName("stock_type")
  private String stockType;
  /** 立减与折扣批次特定信息 说明：立减与折扣批次特定信息 */
  @SerializedName("discount_cut_message")
  private DiscountCutMsg discountCutMessage;

  public String getStockName() {
    return stockName;
  }

  public void setStockName(String stockName) {
    this.stockName = stockName;
  }

  public List<String> getAvailableMerchants() {
    return availableMerchants;
  }

  public void setAvailableMerchants(List<String> availableMerchants) {
    this.availableMerchants = availableMerchants;
  }

  public String getAvailableBeginTime() {
    return availableBeginTime;
  }

  public void setAvailableBeginTime(String availableBeginTime) {
    this.availableBeginTime = availableBeginTime;
  }

  public String getAvailableEndTime() {
    return availableEndTime;
  }

  public void setAvailableEndTime(String availableEndTime) {
    this.availableEndTime = availableEndTime;
  }

  public Boolean getNaturalPersonLimit() {
    return naturalPersonLimit;
  }

  public void setNaturalPersonLimit(Boolean naturalPersonLimit) {
    this.naturalPersonLimit = naturalPersonLimit;
  }

  public Boolean getPreventApiAbuse() {
    return preventApiAbuse;
  }

  public void setPreventApiAbuse(Boolean preventApiAbuse) {
    this.preventApiAbuse = preventApiAbuse;
  }

  public FavorAvailableTime getFavorAvailableTime() {
    return favorAvailableTime;
  }

  public void setFavorAvailableTime(FavorAvailableTime favorAvailableTime) {
    this.favorAvailableTime = favorAvailableTime;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public StockUseRule getStockUseRule() {
    return stockUseRule;
  }

  public void setStockUseRule(StockUseRule stockUseRule) {
    this.stockUseRule = stockUseRule;
  }

  public String getStockType() {
    return stockType;
  }

  public void setStockType(String stockType) {
    this.stockType = stockType;
  }

  public DiscountCutMsg getDiscountCutMessage() {
    return discountCutMessage;
  }

  public void setDiscountCutMessage(DiscountCutMsg discountCutMessage) {
    this.discountCutMessage = discountCutMessage;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateNocashStockRequest {\n");
    sb.append("    stockName: ").append(toIndentedString(stockName)).append("\n");
    sb.append("    availableMerchants: ").append(toIndentedString(availableMerchants)).append("\n");
    sb.append("    availableBeginTime: ").append(toIndentedString(availableBeginTime)).append("\n");
    sb.append("    availableEndTime: ").append(toIndentedString(availableEndTime)).append("\n");
    sb.append("    naturalPersonLimit: ").append(toIndentedString(naturalPersonLimit)).append("\n");
    sb.append("    preventApiAbuse: ").append(toIndentedString(preventApiAbuse)).append("\n");
    sb.append("    favorAvailableTime: ").append(toIndentedString(favorAvailableTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    stockUseRule: ").append(toIndentedString(stockUseRule)).append("\n");
    sb.append("    stockType: ").append(toIndentedString(stockType)).append("\n");
    sb.append("    discountCutMessage: ").append(toIndentedString(discountCutMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }
}
