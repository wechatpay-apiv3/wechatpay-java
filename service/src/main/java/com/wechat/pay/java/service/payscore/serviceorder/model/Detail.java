// Copyright 2021 Tencent Inc. All rights reserved.
//
// 支付分对外API
//
// 包含通用化api及先享后付api
//
// API version: 1.6.3

// Code generated by WechatPay APIv3 Generator based on [OpenAPI
// Generator](https://openapi-generator.tech); DO NOT EDIT.

package com.wechat.pay.java.service.payscore.serviceorder.model;

import com.google.gson.annotations.SerializedName;
import com.wechat.pay.java.core.util.GsonUtil;
import java.util.List;

/** Detail */
public class Detail {
  /** 收款序号 说明：从1开始递增 */
  @SerializedName("seq")
  private Long seq;
  /** 单笔收款金额 说明：单笔收款动作的金额 */
  @SerializedName("amount")
  private Long amount;
  /** 收款成功渠道 说明：微信支付分：NEWTON；商户渠道: MCH */
  @SerializedName("paid_type")
  private String paidType;
  /** 收款成功时间 说明：支付成功时间，支持两种格式:yyyyMMddHHmmss和yyyyMMdd */
  @SerializedName("paid_time")
  private String paidTime;
  /**
   * 微信支付交易单号
   * 说明：结单交易单号,等于普通支付接口中的transaction_id，可以使用该订单号在APP支付->API列表->查询订单进行查询订单、申请退款。只有单据状态为USER_PAID，且收款成功渠道为支付分渠道,
   * 才会返回结单交易单号。
   */
  @SerializedName("transaction_id")
  private String transactionId;
  /** 优惠功能 说明：优惠功能 */
  @SerializedName("promotion_detail")
  private List<PromotionDetail> promotionDetail;

  public Long getSeq() {
    return seq;
  }

  public void setSeq(Long seq) {
    this.seq = seq;
  }

  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public String getPaidType() {
    return paidType;
  }

  public void setPaidType(String paidType) {
    this.paidType = paidType;
  }

  public String getPaidTime() {
    return paidTime;
  }

  public void setPaidTime(String paidTime) {
    this.paidTime = paidTime;
  }

  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public List<PromotionDetail> getPromotionDetail() {
    return promotionDetail;
  }

  public void setPromotionDetail(List<PromotionDetail> promotionDetail) {
    this.promotionDetail = promotionDetail;
  }

  @Override
  public String toString() {
    return GsonUtil.getGson().toJson(this);
  }
}
